# ------------------------------------------------------------------------------
# Copyright 2012-2018 Aerospike, Inc.
#
# Portions may be licensed to Aerospike, Inc. under one or more contributor
# license agreements.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.
# ------------------------------------------------------------------------------

# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: "$NAMESPACE"
---
# Headless service to provide DNS lookup
apiVersion: v1
kind: Service
metadata:
  # deprecation in 1.10, supported until at leasst 1.13, breaks peer-finder/kube-dns if not used
  annotations:
     service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
  name: $APP_INSTANCE_NAME-aerospike-svc
  namespace: "$NAMESPACE"
  labels:
      app.kubernetes.io/name: "$APP_INSTANCE_NAME"
spec:
  publishNotReadyAddresses: true # deprecates service.alpha.kubernetes.io/tolerate-unready-endpoints as of 1.10? see: kubernetes/kubernetes#49239 Fixed in 1.11 as of #63742
  ports:
  - port: 3000
    name: aerospike-client
  # *.$APP_INSTANCE_NAME-#.$SERVICE.$NAMESPACE.svc.cluster.local
  clusterIP: None
  selector:
    # Tells which pods are part of the DNS record
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: aerospike-node
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: $APP_INSTANCE_NAME-aerospike
  namespace: "$NAMESPACE"
  labels: &AerospikeDeploymentLabels
    app.kubernetes.io/name: "$APP_INSTANCE_NAME"
    app.kubernetes.io/component: aerospike-node
spec:
  serviceName: $APP_INSTANCE_NAME-aerospike-svc
  replicas: $AEROSPIKE_NODES
  template:
    metadata:
      labels: *AerospikeDeploymentLabels
    spec:
      terminationGracePeriodSeconds: 30
      containers:
      - name: aerospike
        image: $IMAGE_AEROSPIKE
        imagePullPolicy: Always
# Do not stop node before migrations are complete
        lifecycle:
          preStop:
            exec:
              command: 
              - /bin/sh
              - -c
              - "while true; do finished=0; for part in $( asadm --no-config-file -e 'asinfo -v statistics -l' | grep migrate_par | cut -d= -f2); do if [ $part != 0 ]; then break; fi; finished=1; done; if [ $finished != 1 ]; then sleep 15; else exit 0; fi; done"
        ports:
        - containerPort: 3000
          name: aero-clients
        - containerPort: 3002
          name: aero-mesh
        - containerPort: 3003
          name: aero-info
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "asinfo -v build"
          initialDelaySeconds: 30
          periodSeconds: 60
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 10
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 8640 # 24 hours should be enough
        volumeMounts:
        - name: confdir
          mountPath: /etc/aerospike
#        - name: license
#          mountPath: "/opt/aerospike/license"
#          readOnly: true
        - name: datadir
          mountPath: /opt/aerospike/data
        resources:
          requests:
            memory: ${AEROSPIKE_MEM}Gi
        # Downward API:
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: MY_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: ENTITLEMENT
          valueFrom:
            secretKeyRef:
              name: $REPORTING_SECRET
              key: entitlement-id
        - name: NAMESPACE
          value: $AEROSPIKE_NAMESPACE
        - name: REPL_FACTOR
          value: "$AEROSPIKE_REPL"
        - name: MEM_GB
          value: "$AEROSPIKE_MEM"
        - name: DEFAULT_TTL
          value: "$AEROSPIKE_TTL"
#        - name: STORAGE_GB
#          value: "$AEROSPIKE_STORAGE"
        - name: AGENT_LOCAL_PORT
          value: "6080"
      - image: $IMAGE_UBBAGENT
        name: ubbagent
        env:
        - name: AGENT_CONFIG_FILE
          value: /etc/ubbagent/config.yaml
        - name: AGENT_LOCAL_PORT
          value: "6080"
        - name: AGENT_STATE_DIR
          value: /var/lib/ubbagent
        - name: AGENT_REPORT_DIR
          value: /var/lib/ubbagent/reports
        - name: CONSUMER_ID
          valueFrom:
            secretKeyRef:
              name: $REPORTING_SECRET 
              key: consumer-id
        - name: REPORTING_KEY
          valueFrom:
            secretKeyRef:
              name: $REPORTING_SECRET
              key: reporting-key
        volumeMounts:
        - name: ubbagent-config
          mountPath: /etc/ubbagent
        - name: ubbagent-state
          mountPath: /var/lib/ubbagent
      initContainers:
      - name: aerospike-install
        image: $IMAGE_INIT
        imagePullPolicy: Always
        volumeMounts:
        - name: confdir
          mountPath: /etc/aerospike
        - name: ubbagent-config
          mountPath: /etc/ubbagent
        env:
        - name: SERVICE
          value: $APP_INSTANCE_NAME-aerospike-svc
        - name: PERSIST
          value: "$AEROSPIKE_PERSIST"
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      volumes:
      - name: confdir
        emptyDir: {}
      - name: ubbagent-config
        emptyDir: {}
      - name: ubbagent-state
        emptyDir: {}
#      - name: license
#        secret:
#          secretName: aerospikeLicense
#          optional: true
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: ${AEROSPIKE_MEM}Gi
